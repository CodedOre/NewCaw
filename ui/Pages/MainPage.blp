using Gtk 4.0;
using Adw 1;

template MainPage : Gtk.Widget {
  layout-manager: Gtk.BinLayout {};

  Adw.Flap page_flap {
    fold-policy: always;
    reveal-flap: bind content_sidebar_toggle.active;

    [content]
    Gtk.Box {
      orientation: vertical;

      Adw.HeaderBar {
        show-start-title-buttons: bind page_flap.folded;

        [start]
        Gtk.ToggleButton content_sidebar_toggle {
          icon-name: "sidebar-show-symbolic";
          active: bind flap_sidebar_toggle.active;
        }

        [title]
        Adw.ViewSwitcherTitle content_title {
          stack: view_stack;

        }

        [end]
        Gtk.MenuButton {
          icon-name: "open-menu-symbolic";
          menu-model: main-menu;
          primary: true;
        }
      }

      Adw.ViewStack view_stack {
        vexpand: true;

        Adw.ViewStackPage {
          icon-name: "go-home-symbolic";
          title: _("Home");
          child: .CollectionView home_collection {};
        }

        Adw.ViewStackPage {
          icon-name: "system-search-symbolic";
          title: _("Search");
          child: .SearchView {
            session: bind MainPage.session;
          };
        }
      }

      Adw.ViewSwitcherBar {
        reveal: bind content_title.title-visible;
        stack: view_stack;
      }
    }

    [separator]
    Gtk.Separator {
      orientation: vertical;
    }

    [flap]
    Gtk.Box {
      orientation: vertical;
      width-request: 300;

      styles [
        "background"
      ]

      Adw.HeaderBar {
        show-start-title-buttons: bind page_flap.folded inverted;
        show-end-title-buttons: false;

        [start]
        Gtk.ToggleButton flap_sidebar_toggle {
          icon-name: "sidebar-show-symbolic";
          active: bind page_flap.reveal-flap;
          visible: bind page_flap.folded;
        }

        [title]
        Adw.WindowTitle flap_title {}
      }

      .SessionSidebar session_sidebar {}
    }
  }
}

menu main-menu {
  item {
    label: _("Preferences");
    action: "app.preferences";
  }
  item {
    label: _("About");
    action: "app.about";
  }
}